AWSTemplateFormatVersion: 2010-09-09

Description: Deploys a IAM Roles you'll use in your Batch workflow

Resources:
  lambdaBatchExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  lambdaBatchExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: lambdaBatchExecutionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: CloudWatchPolicy
            Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource:
            - "*"
          - Sid: S3Policy
            Effect: Allow
            Action:
            - "s3:List*"
            Resource:
            - "*"
          - Sid: LambdaPolicy
            Effect: Allow
            Action:
            - "lambda:InvokeFunction"
            Resource:
            - "*"
          - Sid: BatchPolicy
            Effect: Allow
            Action:
            - "batch:DescribeJobs"
            - "batch:ListJobs"
            - "batch:SubmitJob"
            Resource:
            - "*"
      Roles:
      - !Ref lambdaBatchExecutionRole

  ecsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"

  ecsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"

  ecsInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref ecsInstanceRole
      InstanceProfileName: !Ref ecsInstanceRole

  spotFleetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "spotfleet.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole"

  awsBatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "batch.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

Outputs:
  BatchServiceRole:
    Value: !GetAtt awsBatchServiceRole.Arn
  SpotFleetRole:
    Value: !GetAtt spotFleetRole.Arn
  EcsInstanceRole:
    Value: !GetAtt ecsInstanceRole.Arn
  EcsTaskRole:
    Value: !GetAtt ecsTaskRole.Arn
  LambdaBatchExecutionRole:
    Value: !GetAtt lambdaBatchExecutionRole.Arn
